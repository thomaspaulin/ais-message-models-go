/*
Ais-Stream WebsocketObjects

OpenAPI 3.0 definitions for the data models used by aisstream.io.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aisStream

import (
	"encoding/json"
)

// UnknownMessage struct for UnknownMessage
type UnknownMessage struct {
	Error *string `json:"Error,omitempty"`
}

// NewUnknownMessage instantiates a new UnknownMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnknownMessage() *UnknownMessage {
	this := UnknownMessage{}
	return &this
}

// NewUnknownMessageWithDefaults instantiates a new UnknownMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnknownMessageWithDefaults() *UnknownMessage {
	this := UnknownMessage{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *UnknownMessage) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnknownMessage) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *UnknownMessage) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *UnknownMessage) SetError(v string) {
	o.Error = &v
}

func (o UnknownMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["Error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableUnknownMessage struct {
	value *UnknownMessage
	isSet bool
}

func (v NullableUnknownMessage) Get() *UnknownMessage {
	return v.value
}

func (v *NullableUnknownMessage) Set(val *UnknownMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableUnknownMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableUnknownMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnknownMessage(val *UnknownMessage) *NullableUnknownMessage {
	return &NullableUnknownMessage{value: val, isSet: true}
}

func (v NullableUnknownMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnknownMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


