/*
Ais-Stream WebsocketObjects

OpenAPI 3.0 definitions for the data models used by aisstream.io.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aisStream

import (
	"encoding/json"
)

// GroupAssignmentCommand struct for GroupAssignmentCommand
type GroupAssignmentCommand struct {
	MessageID int32 `json:"MessageID"`
	RepeatIndicator int32 `json:"RepeatIndicator"`
	UserID int32 `json:"UserID"`
	Valid bool `json:"Valid"`
	Spare1 int32 `json:"Spare1"`
	Longitude1 float64 `json:"Longitude1"`
	Latitude1 float64 `json:"Latitude1"`
	Longitude2 float64 `json:"Longitude2"`
	Latitude2 float64 `json:"Latitude2"`
	StationType int32 `json:"StationType"`
	ShipType int32 `json:"ShipType"`
	Spare2 int32 `json:"Spare2"`
	TxRxMode int32 `json:"TxRxMode"`
	ReportingInterval int32 `json:"ReportingInterval"`
	QuietTime int32 `json:"QuietTime"`
	Spare3 int32 `json:"Spare3"`
}

// NewGroupAssignmentCommand instantiates a new GroupAssignmentCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupAssignmentCommand(messageID int32, repeatIndicator int32, userID int32, valid bool, spare1 int32, longitude1 float64, latitude1 float64, longitude2 float64, latitude2 float64, stationType int32, shipType int32, spare2 int32, txRxMode int32, reportingInterval int32, quietTime int32, spare3 int32) *GroupAssignmentCommand {
	this := GroupAssignmentCommand{}
	this.MessageID = messageID
	this.RepeatIndicator = repeatIndicator
	this.UserID = userID
	this.Valid = valid
	this.Spare1 = spare1
	this.Longitude1 = longitude1
	this.Latitude1 = latitude1
	this.Longitude2 = longitude2
	this.Latitude2 = latitude2
	this.StationType = stationType
	this.ShipType = shipType
	this.Spare2 = spare2
	this.TxRxMode = txRxMode
	this.ReportingInterval = reportingInterval
	this.QuietTime = quietTime
	this.Spare3 = spare3
	return &this
}

// NewGroupAssignmentCommandWithDefaults instantiates a new GroupAssignmentCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupAssignmentCommandWithDefaults() *GroupAssignmentCommand {
	this := GroupAssignmentCommand{}
	return &this
}

// GetMessageID returns the MessageID field value
func (o *GroupAssignmentCommand) GetMessageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MessageID
}

// GetMessageIDOk returns a tuple with the MessageID field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetMessageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageID, true
}

// SetMessageID sets field value
func (o *GroupAssignmentCommand) SetMessageID(v int32) {
	o.MessageID = v
}

// GetRepeatIndicator returns the RepeatIndicator field value
func (o *GroupAssignmentCommand) GetRepeatIndicator() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RepeatIndicator
}

// GetRepeatIndicatorOk returns a tuple with the RepeatIndicator field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetRepeatIndicatorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepeatIndicator, true
}

// SetRepeatIndicator sets field value
func (o *GroupAssignmentCommand) SetRepeatIndicator(v int32) {
	o.RepeatIndicator = v
}

// GetUserID returns the UserID field value
func (o *GroupAssignmentCommand) GetUserID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetUserIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserID, true
}

// SetUserID sets field value
func (o *GroupAssignmentCommand) SetUserID(v int32) {
	o.UserID = v
}

// GetValid returns the Valid field value
func (o *GroupAssignmentCommand) GetValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Valid
}

// GetValidOk returns a tuple with the Valid field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Valid, true
}

// SetValid sets field value
func (o *GroupAssignmentCommand) SetValid(v bool) {
	o.Valid = v
}

// GetSpare1 returns the Spare1 field value
func (o *GroupAssignmentCommand) GetSpare1() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Spare1
}

// GetSpare1Ok returns a tuple with the Spare1 field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetSpare1Ok() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spare1, true
}

// SetSpare1 sets field value
func (o *GroupAssignmentCommand) SetSpare1(v int32) {
	o.Spare1 = v
}

// GetLongitude1 returns the Longitude1 field value
func (o *GroupAssignmentCommand) GetLongitude1() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Longitude1
}

// GetLongitude1Ok returns a tuple with the Longitude1 field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetLongitude1Ok() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Longitude1, true
}

// SetLongitude1 sets field value
func (o *GroupAssignmentCommand) SetLongitude1(v float64) {
	o.Longitude1 = v
}

// GetLatitude1 returns the Latitude1 field value
func (o *GroupAssignmentCommand) GetLatitude1() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Latitude1
}

// GetLatitude1Ok returns a tuple with the Latitude1 field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetLatitude1Ok() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Latitude1, true
}

// SetLatitude1 sets field value
func (o *GroupAssignmentCommand) SetLatitude1(v float64) {
	o.Latitude1 = v
}

// GetLongitude2 returns the Longitude2 field value
func (o *GroupAssignmentCommand) GetLongitude2() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Longitude2
}

// GetLongitude2Ok returns a tuple with the Longitude2 field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetLongitude2Ok() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Longitude2, true
}

// SetLongitude2 sets field value
func (o *GroupAssignmentCommand) SetLongitude2(v float64) {
	o.Longitude2 = v
}

// GetLatitude2 returns the Latitude2 field value
func (o *GroupAssignmentCommand) GetLatitude2() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Latitude2
}

// GetLatitude2Ok returns a tuple with the Latitude2 field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetLatitude2Ok() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Latitude2, true
}

// SetLatitude2 sets field value
func (o *GroupAssignmentCommand) SetLatitude2(v float64) {
	o.Latitude2 = v
}

// GetStationType returns the StationType field value
func (o *GroupAssignmentCommand) GetStationType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StationType
}

// GetStationTypeOk returns a tuple with the StationType field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetStationTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StationType, true
}

// SetStationType sets field value
func (o *GroupAssignmentCommand) SetStationType(v int32) {
	o.StationType = v
}

// GetShipType returns the ShipType field value
func (o *GroupAssignmentCommand) GetShipType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ShipType
}

// GetShipTypeOk returns a tuple with the ShipType field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetShipTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShipType, true
}

// SetShipType sets field value
func (o *GroupAssignmentCommand) SetShipType(v int32) {
	o.ShipType = v
}

// GetSpare2 returns the Spare2 field value
func (o *GroupAssignmentCommand) GetSpare2() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Spare2
}

// GetSpare2Ok returns a tuple with the Spare2 field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetSpare2Ok() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spare2, true
}

// SetSpare2 sets field value
func (o *GroupAssignmentCommand) SetSpare2(v int32) {
	o.Spare2 = v
}

// GetTxRxMode returns the TxRxMode field value
func (o *GroupAssignmentCommand) GetTxRxMode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TxRxMode
}

// GetTxRxModeOk returns a tuple with the TxRxMode field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetTxRxModeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxRxMode, true
}

// SetTxRxMode sets field value
func (o *GroupAssignmentCommand) SetTxRxMode(v int32) {
	o.TxRxMode = v
}

// GetReportingInterval returns the ReportingInterval field value
func (o *GroupAssignmentCommand) GetReportingInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReportingInterval
}

// GetReportingIntervalOk returns a tuple with the ReportingInterval field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetReportingIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportingInterval, true
}

// SetReportingInterval sets field value
func (o *GroupAssignmentCommand) SetReportingInterval(v int32) {
	o.ReportingInterval = v
}

// GetQuietTime returns the QuietTime field value
func (o *GroupAssignmentCommand) GetQuietTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.QuietTime
}

// GetQuietTimeOk returns a tuple with the QuietTime field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetQuietTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuietTime, true
}

// SetQuietTime sets field value
func (o *GroupAssignmentCommand) SetQuietTime(v int32) {
	o.QuietTime = v
}

// GetSpare3 returns the Spare3 field value
func (o *GroupAssignmentCommand) GetSpare3() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Spare3
}

// GetSpare3Ok returns a tuple with the Spare3 field value
// and a boolean to check if the value has been set.
func (o *GroupAssignmentCommand) GetSpare3Ok() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spare3, true
}

// SetSpare3 sets field value
func (o *GroupAssignmentCommand) SetSpare3(v int32) {
	o.Spare3 = v
}

func (o GroupAssignmentCommand) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["MessageID"] = o.MessageID
	}
	if true {
		toSerialize["RepeatIndicator"] = o.RepeatIndicator
	}
	if true {
		toSerialize["UserID"] = o.UserID
	}
	if true {
		toSerialize["Valid"] = o.Valid
	}
	if true {
		toSerialize["Spare1"] = o.Spare1
	}
	if true {
		toSerialize["Longitude1"] = o.Longitude1
	}
	if true {
		toSerialize["Latitude1"] = o.Latitude1
	}
	if true {
		toSerialize["Longitude2"] = o.Longitude2
	}
	if true {
		toSerialize["Latitude2"] = o.Latitude2
	}
	if true {
		toSerialize["StationType"] = o.StationType
	}
	if true {
		toSerialize["ShipType"] = o.ShipType
	}
	if true {
		toSerialize["Spare2"] = o.Spare2
	}
	if true {
		toSerialize["TxRxMode"] = o.TxRxMode
	}
	if true {
		toSerialize["ReportingInterval"] = o.ReportingInterval
	}
	if true {
		toSerialize["QuietTime"] = o.QuietTime
	}
	if true {
		toSerialize["Spare3"] = o.Spare3
	}
	return json.Marshal(toSerialize)
}

type NullableGroupAssignmentCommand struct {
	value *GroupAssignmentCommand
	isSet bool
}

func (v NullableGroupAssignmentCommand) Get() *GroupAssignmentCommand {
	return v.value
}

func (v *NullableGroupAssignmentCommand) Set(val *GroupAssignmentCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupAssignmentCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupAssignmentCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupAssignmentCommand(val *GroupAssignmentCommand) *NullableGroupAssignmentCommand {
	return &NullableGroupAssignmentCommand{value: val, isSet: true}
}

func (v NullableGroupAssignmentCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupAssignmentCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


