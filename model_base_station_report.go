/*
Ais-Stream WebsocketObjects

OpenAPI 3.0 definitions for the data models used by aisstream.io.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aisStream

import (
	"encoding/json"
)

// BaseStationReport struct for BaseStationReport
type BaseStationReport struct {
	MessageID int32 `json:"MessageID"`
	RepeatIndicator int32 `json:"RepeatIndicator"`
	UserID int32 `json:"UserID"`
	Valid bool `json:"Valid"`
	UtcYear int32 `json:"UtcYear"`
	UtcMonth int32 `json:"UtcMonth"`
	UtcDay int32 `json:"UtcDay"`
	UtcHour int32 `json:"UtcHour"`
	UtcMinute int32 `json:"UtcMinute"`
	UtcSecond int32 `json:"UtcSecond"`
	PositionAccuracy bool `json:"PositionAccuracy"`
	Longitude float64 `json:"Longitude"`
	Latitude float64 `json:"Latitude"`
	FixType int32 `json:"FixType"`
	LongRangeEnable bool `json:"LongRangeEnable"`
	Spare int32 `json:"Spare"`
	Raim bool `json:"Raim"`
	CommunicationState int32 `json:"CommunicationState"`
}

// NewBaseStationReport instantiates a new BaseStationReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseStationReport(messageID int32, repeatIndicator int32, userID int32, valid bool, utcYear int32, utcMonth int32, utcDay int32, utcHour int32, utcMinute int32, utcSecond int32, positionAccuracy bool, longitude float64, latitude float64, fixType int32, longRangeEnable bool, spare int32, raim bool, communicationState int32) *BaseStationReport {
	this := BaseStationReport{}
	this.MessageID = messageID
	this.RepeatIndicator = repeatIndicator
	this.UserID = userID
	this.Valid = valid
	this.UtcYear = utcYear
	this.UtcMonth = utcMonth
	this.UtcDay = utcDay
	this.UtcHour = utcHour
	this.UtcMinute = utcMinute
	this.UtcSecond = utcSecond
	this.PositionAccuracy = positionAccuracy
	this.Longitude = longitude
	this.Latitude = latitude
	this.FixType = fixType
	this.LongRangeEnable = longRangeEnable
	this.Spare = spare
	this.Raim = raim
	this.CommunicationState = communicationState
	return &this
}

// NewBaseStationReportWithDefaults instantiates a new BaseStationReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseStationReportWithDefaults() *BaseStationReport {
	this := BaseStationReport{}
	return &this
}

// GetMessageID returns the MessageID field value
func (o *BaseStationReport) GetMessageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MessageID
}

// GetMessageIDOk returns a tuple with the MessageID field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetMessageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageID, true
}

// SetMessageID sets field value
func (o *BaseStationReport) SetMessageID(v int32) {
	o.MessageID = v
}

// GetRepeatIndicator returns the RepeatIndicator field value
func (o *BaseStationReport) GetRepeatIndicator() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RepeatIndicator
}

// GetRepeatIndicatorOk returns a tuple with the RepeatIndicator field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetRepeatIndicatorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepeatIndicator, true
}

// SetRepeatIndicator sets field value
func (o *BaseStationReport) SetRepeatIndicator(v int32) {
	o.RepeatIndicator = v
}

// GetUserID returns the UserID field value
func (o *BaseStationReport) GetUserID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetUserIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserID, true
}

// SetUserID sets field value
func (o *BaseStationReport) SetUserID(v int32) {
	o.UserID = v
}

// GetValid returns the Valid field value
func (o *BaseStationReport) GetValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Valid
}

// GetValidOk returns a tuple with the Valid field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Valid, true
}

// SetValid sets field value
func (o *BaseStationReport) SetValid(v bool) {
	o.Valid = v
}

// GetUtcYear returns the UtcYear field value
func (o *BaseStationReport) GetUtcYear() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UtcYear
}

// GetUtcYearOk returns a tuple with the UtcYear field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetUtcYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UtcYear, true
}

// SetUtcYear sets field value
func (o *BaseStationReport) SetUtcYear(v int32) {
	o.UtcYear = v
}

// GetUtcMonth returns the UtcMonth field value
func (o *BaseStationReport) GetUtcMonth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UtcMonth
}

// GetUtcMonthOk returns a tuple with the UtcMonth field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetUtcMonthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UtcMonth, true
}

// SetUtcMonth sets field value
func (o *BaseStationReport) SetUtcMonth(v int32) {
	o.UtcMonth = v
}

// GetUtcDay returns the UtcDay field value
func (o *BaseStationReport) GetUtcDay() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UtcDay
}

// GetUtcDayOk returns a tuple with the UtcDay field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetUtcDayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UtcDay, true
}

// SetUtcDay sets field value
func (o *BaseStationReport) SetUtcDay(v int32) {
	o.UtcDay = v
}

// GetUtcHour returns the UtcHour field value
func (o *BaseStationReport) GetUtcHour() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UtcHour
}

// GetUtcHourOk returns a tuple with the UtcHour field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetUtcHourOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UtcHour, true
}

// SetUtcHour sets field value
func (o *BaseStationReport) SetUtcHour(v int32) {
	o.UtcHour = v
}

// GetUtcMinute returns the UtcMinute field value
func (o *BaseStationReport) GetUtcMinute() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UtcMinute
}

// GetUtcMinuteOk returns a tuple with the UtcMinute field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetUtcMinuteOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UtcMinute, true
}

// SetUtcMinute sets field value
func (o *BaseStationReport) SetUtcMinute(v int32) {
	o.UtcMinute = v
}

// GetUtcSecond returns the UtcSecond field value
func (o *BaseStationReport) GetUtcSecond() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UtcSecond
}

// GetUtcSecondOk returns a tuple with the UtcSecond field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetUtcSecondOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UtcSecond, true
}

// SetUtcSecond sets field value
func (o *BaseStationReport) SetUtcSecond(v int32) {
	o.UtcSecond = v
}

// GetPositionAccuracy returns the PositionAccuracy field value
func (o *BaseStationReport) GetPositionAccuracy() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PositionAccuracy
}

// GetPositionAccuracyOk returns a tuple with the PositionAccuracy field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetPositionAccuracyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PositionAccuracy, true
}

// SetPositionAccuracy sets field value
func (o *BaseStationReport) SetPositionAccuracy(v bool) {
	o.PositionAccuracy = v
}

// GetLongitude returns the Longitude field value
func (o *BaseStationReport) GetLongitude() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetLongitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Longitude, true
}

// SetLongitude sets field value
func (o *BaseStationReport) SetLongitude(v float64) {
	o.Longitude = v
}

// GetLatitude returns the Latitude field value
func (o *BaseStationReport) GetLatitude() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetLatitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Latitude, true
}

// SetLatitude sets field value
func (o *BaseStationReport) SetLatitude(v float64) {
	o.Latitude = v
}

// GetFixType returns the FixType field value
func (o *BaseStationReport) GetFixType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FixType
}

// GetFixTypeOk returns a tuple with the FixType field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetFixTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FixType, true
}

// SetFixType sets field value
func (o *BaseStationReport) SetFixType(v int32) {
	o.FixType = v
}

// GetLongRangeEnable returns the LongRangeEnable field value
func (o *BaseStationReport) GetLongRangeEnable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LongRangeEnable
}

// GetLongRangeEnableOk returns a tuple with the LongRangeEnable field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetLongRangeEnableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LongRangeEnable, true
}

// SetLongRangeEnable sets field value
func (o *BaseStationReport) SetLongRangeEnable(v bool) {
	o.LongRangeEnable = v
}

// GetSpare returns the Spare field value
func (o *BaseStationReport) GetSpare() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Spare
}

// GetSpareOk returns a tuple with the Spare field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetSpareOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spare, true
}

// SetSpare sets field value
func (o *BaseStationReport) SetSpare(v int32) {
	o.Spare = v
}

// GetRaim returns the Raim field value
func (o *BaseStationReport) GetRaim() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Raim
}

// GetRaimOk returns a tuple with the Raim field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetRaimOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Raim, true
}

// SetRaim sets field value
func (o *BaseStationReport) SetRaim(v bool) {
	o.Raim = v
}

// GetCommunicationState returns the CommunicationState field value
func (o *BaseStationReport) GetCommunicationState() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CommunicationState
}

// GetCommunicationStateOk returns a tuple with the CommunicationState field value
// and a boolean to check if the value has been set.
func (o *BaseStationReport) GetCommunicationStateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommunicationState, true
}

// SetCommunicationState sets field value
func (o *BaseStationReport) SetCommunicationState(v int32) {
	o.CommunicationState = v
}

func (o BaseStationReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["MessageID"] = o.MessageID
	}
	if true {
		toSerialize["RepeatIndicator"] = o.RepeatIndicator
	}
	if true {
		toSerialize["UserID"] = o.UserID
	}
	if true {
		toSerialize["Valid"] = o.Valid
	}
	if true {
		toSerialize["UtcYear"] = o.UtcYear
	}
	if true {
		toSerialize["UtcMonth"] = o.UtcMonth
	}
	if true {
		toSerialize["UtcDay"] = o.UtcDay
	}
	if true {
		toSerialize["UtcHour"] = o.UtcHour
	}
	if true {
		toSerialize["UtcMinute"] = o.UtcMinute
	}
	if true {
		toSerialize["UtcSecond"] = o.UtcSecond
	}
	if true {
		toSerialize["PositionAccuracy"] = o.PositionAccuracy
	}
	if true {
		toSerialize["Longitude"] = o.Longitude
	}
	if true {
		toSerialize["Latitude"] = o.Latitude
	}
	if true {
		toSerialize["FixType"] = o.FixType
	}
	if true {
		toSerialize["LongRangeEnable"] = o.LongRangeEnable
	}
	if true {
		toSerialize["Spare"] = o.Spare
	}
	if true {
		toSerialize["Raim"] = o.Raim
	}
	if true {
		toSerialize["CommunicationState"] = o.CommunicationState
	}
	return json.Marshal(toSerialize)
}

type NullableBaseStationReport struct {
	value *BaseStationReport
	isSet bool
}

func (v NullableBaseStationReport) Get() *BaseStationReport {
	return v.value
}

func (v *NullableBaseStationReport) Set(val *BaseStationReport) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseStationReport) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseStationReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseStationReport(val *BaseStationReport) *NullableBaseStationReport {
	return &NullableBaseStationReport{value: val, isSet: true}
}

func (v NullableBaseStationReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseStationReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


