/*
Ais-Stream WebsocketObjects

OpenAPI 3.0 definitions for the data models used by aisstream.io.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aisStream

import (
	"encoding/json"
)

// DataLinkManagementMessageData0 struct for DataLinkManagementMessageData0
type DataLinkManagementMessageData0 struct {
	Valid bool `json:"Valid"`
	Offset int32 `json:"Offset"`
	IntegerOfSlots int32 `json:"integerOfSlots"`
	TimeOut int32 `json:"TimeOut"`
	Increment int32 `json:"Increment"`
}

// NewDataLinkManagementMessageData0 instantiates a new DataLinkManagementMessageData0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataLinkManagementMessageData0(valid bool, offset int32, integerOfSlots int32, timeOut int32, increment int32) *DataLinkManagementMessageData0 {
	this := DataLinkManagementMessageData0{}
	this.Valid = valid
	this.Offset = offset
	this.IntegerOfSlots = integerOfSlots
	this.TimeOut = timeOut
	this.Increment = increment
	return &this
}

// NewDataLinkManagementMessageData0WithDefaults instantiates a new DataLinkManagementMessageData0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataLinkManagementMessageData0WithDefaults() *DataLinkManagementMessageData0 {
	this := DataLinkManagementMessageData0{}
	return &this
}

// GetValid returns the Valid field value
func (o *DataLinkManagementMessageData0) GetValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Valid
}

// GetValidOk returns a tuple with the Valid field value
// and a boolean to check if the value has been set.
func (o *DataLinkManagementMessageData0) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Valid, true
}

// SetValid sets field value
func (o *DataLinkManagementMessageData0) SetValid(v bool) {
	o.Valid = v
}

// GetOffset returns the Offset field value
func (o *DataLinkManagementMessageData0) GetOffset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value
// and a boolean to check if the value has been set.
func (o *DataLinkManagementMessageData0) GetOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offset, true
}

// SetOffset sets field value
func (o *DataLinkManagementMessageData0) SetOffset(v int32) {
	o.Offset = v
}

// GetIntegerOfSlots returns the IntegerOfSlots field value
func (o *DataLinkManagementMessageData0) GetIntegerOfSlots() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IntegerOfSlots
}

// GetIntegerOfSlotsOk returns a tuple with the IntegerOfSlots field value
// and a boolean to check if the value has been set.
func (o *DataLinkManagementMessageData0) GetIntegerOfSlotsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegerOfSlots, true
}

// SetIntegerOfSlots sets field value
func (o *DataLinkManagementMessageData0) SetIntegerOfSlots(v int32) {
	o.IntegerOfSlots = v
}

// GetTimeOut returns the TimeOut field value
func (o *DataLinkManagementMessageData0) GetTimeOut() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TimeOut
}

// GetTimeOutOk returns a tuple with the TimeOut field value
// and a boolean to check if the value has been set.
func (o *DataLinkManagementMessageData0) GetTimeOutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeOut, true
}

// SetTimeOut sets field value
func (o *DataLinkManagementMessageData0) SetTimeOut(v int32) {
	o.TimeOut = v
}

// GetIncrement returns the Increment field value
func (o *DataLinkManagementMessageData0) GetIncrement() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value
// and a boolean to check if the value has been set.
func (o *DataLinkManagementMessageData0) GetIncrementOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Increment, true
}

// SetIncrement sets field value
func (o *DataLinkManagementMessageData0) SetIncrement(v int32) {
	o.Increment = v
}

func (o DataLinkManagementMessageData0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Valid"] = o.Valid
	}
	if true {
		toSerialize["Offset"] = o.Offset
	}
	if true {
		toSerialize["integerOfSlots"] = o.IntegerOfSlots
	}
	if true {
		toSerialize["TimeOut"] = o.TimeOut
	}
	if true {
		toSerialize["Increment"] = o.Increment
	}
	return json.Marshal(toSerialize)
}

type NullableDataLinkManagementMessageData0 struct {
	value *DataLinkManagementMessageData0
	isSet bool
}

func (v NullableDataLinkManagementMessageData0) Get() *DataLinkManagementMessageData0 {
	return v.value
}

func (v *NullableDataLinkManagementMessageData0) Set(val *DataLinkManagementMessageData0) {
	v.value = val
	v.isSet = true
}

func (v NullableDataLinkManagementMessageData0) IsSet() bool {
	return v.isSet
}

func (v *NullableDataLinkManagementMessageData0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataLinkManagementMessageData0(val *DataLinkManagementMessageData0) *NullableDataLinkManagementMessageData0 {
	return &NullableDataLinkManagementMessageData0{value: val, isSet: true}
}

func (v NullableDataLinkManagementMessageData0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataLinkManagementMessageData0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


