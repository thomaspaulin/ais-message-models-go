/*
Ais-Stream WebsocketObjects

OpenAPI 3.0 definitions for the data models used by aisstream.io.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aisStream

import (
	"encoding/json"
)

// MultiSlotBinaryMessage struct for MultiSlotBinaryMessage
type MultiSlotBinaryMessage struct {
	MessageID int32 `json:"MessageID"`
	RepeatIndicator int32 `json:"RepeatIndicator"`
	UserID int32 `json:"UserID"`
	Valid bool `json:"Valid"`
	DestinationIDValid bool `json:"DestinationIDValid"`
	ApplicationIDValid bool `json:"ApplicationIDValid"`
	DestinationID int32 `json:"DestinationID"`
	Spare1 int32 `json:"Spare1"`
	ApplicationID AddressedBinaryMessageApplicationID `json:"ApplicationID"`
	Payload string `json:"Payload"`
	Spare2 int32 `json:"Spare2"`
	CommunicationStateIsItdma bool `json:"CommunicationStateIsItdma"`
	CommunicationState int32 `json:"CommunicationState"`
}

// NewMultiSlotBinaryMessage instantiates a new MultiSlotBinaryMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSlotBinaryMessage(messageID int32, repeatIndicator int32, userID int32, valid bool, destinationIDValid bool, applicationIDValid bool, destinationID int32, spare1 int32, applicationID AddressedBinaryMessageApplicationID, payload string, spare2 int32, communicationStateIsItdma bool, communicationState int32) *MultiSlotBinaryMessage {
	this := MultiSlotBinaryMessage{}
	this.MessageID = messageID
	this.RepeatIndicator = repeatIndicator
	this.UserID = userID
	this.Valid = valid
	this.DestinationIDValid = destinationIDValid
	this.ApplicationIDValid = applicationIDValid
	this.DestinationID = destinationID
	this.Spare1 = spare1
	this.ApplicationID = applicationID
	this.Payload = payload
	this.Spare2 = spare2
	this.CommunicationStateIsItdma = communicationStateIsItdma
	this.CommunicationState = communicationState
	return &this
}

// NewMultiSlotBinaryMessageWithDefaults instantiates a new MultiSlotBinaryMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSlotBinaryMessageWithDefaults() *MultiSlotBinaryMessage {
	this := MultiSlotBinaryMessage{}
	return &this
}

// GetMessageID returns the MessageID field value
func (o *MultiSlotBinaryMessage) GetMessageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MessageID
}

// GetMessageIDOk returns a tuple with the MessageID field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetMessageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageID, true
}

// SetMessageID sets field value
func (o *MultiSlotBinaryMessage) SetMessageID(v int32) {
	o.MessageID = v
}

// GetRepeatIndicator returns the RepeatIndicator field value
func (o *MultiSlotBinaryMessage) GetRepeatIndicator() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RepeatIndicator
}

// GetRepeatIndicatorOk returns a tuple with the RepeatIndicator field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetRepeatIndicatorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepeatIndicator, true
}

// SetRepeatIndicator sets field value
func (o *MultiSlotBinaryMessage) SetRepeatIndicator(v int32) {
	o.RepeatIndicator = v
}

// GetUserID returns the UserID field value
func (o *MultiSlotBinaryMessage) GetUserID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetUserIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserID, true
}

// SetUserID sets field value
func (o *MultiSlotBinaryMessage) SetUserID(v int32) {
	o.UserID = v
}

// GetValid returns the Valid field value
func (o *MultiSlotBinaryMessage) GetValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Valid
}

// GetValidOk returns a tuple with the Valid field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Valid, true
}

// SetValid sets field value
func (o *MultiSlotBinaryMessage) SetValid(v bool) {
	o.Valid = v
}

// GetDestinationIDValid returns the DestinationIDValid field value
func (o *MultiSlotBinaryMessage) GetDestinationIDValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DestinationIDValid
}

// GetDestinationIDValidOk returns a tuple with the DestinationIDValid field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetDestinationIDValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationIDValid, true
}

// SetDestinationIDValid sets field value
func (o *MultiSlotBinaryMessage) SetDestinationIDValid(v bool) {
	o.DestinationIDValid = v
}

// GetApplicationIDValid returns the ApplicationIDValid field value
func (o *MultiSlotBinaryMessage) GetApplicationIDValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ApplicationIDValid
}

// GetApplicationIDValidOk returns a tuple with the ApplicationIDValid field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetApplicationIDValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationIDValid, true
}

// SetApplicationIDValid sets field value
func (o *MultiSlotBinaryMessage) SetApplicationIDValid(v bool) {
	o.ApplicationIDValid = v
}

// GetDestinationID returns the DestinationID field value
func (o *MultiSlotBinaryMessage) GetDestinationID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DestinationID
}

// GetDestinationIDOk returns a tuple with the DestinationID field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetDestinationIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationID, true
}

// SetDestinationID sets field value
func (o *MultiSlotBinaryMessage) SetDestinationID(v int32) {
	o.DestinationID = v
}

// GetSpare1 returns the Spare1 field value
func (o *MultiSlotBinaryMessage) GetSpare1() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Spare1
}

// GetSpare1Ok returns a tuple with the Spare1 field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetSpare1Ok() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spare1, true
}

// SetSpare1 sets field value
func (o *MultiSlotBinaryMessage) SetSpare1(v int32) {
	o.Spare1 = v
}

// GetApplicationID returns the ApplicationID field value
func (o *MultiSlotBinaryMessage) GetApplicationID() AddressedBinaryMessageApplicationID {
	if o == nil {
		var ret AddressedBinaryMessageApplicationID
		return ret
	}

	return o.ApplicationID
}

// GetApplicationIDOk returns a tuple with the ApplicationID field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetApplicationIDOk() (*AddressedBinaryMessageApplicationID, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationID, true
}

// SetApplicationID sets field value
func (o *MultiSlotBinaryMessage) SetApplicationID(v AddressedBinaryMessageApplicationID) {
	o.ApplicationID = v
}

// GetPayload returns the Payload field value
func (o *MultiSlotBinaryMessage) GetPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *MultiSlotBinaryMessage) SetPayload(v string) {
	o.Payload = v
}

// GetSpare2 returns the Spare2 field value
func (o *MultiSlotBinaryMessage) GetSpare2() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Spare2
}

// GetSpare2Ok returns a tuple with the Spare2 field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetSpare2Ok() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spare2, true
}

// SetSpare2 sets field value
func (o *MultiSlotBinaryMessage) SetSpare2(v int32) {
	o.Spare2 = v
}

// GetCommunicationStateIsItdma returns the CommunicationStateIsItdma field value
func (o *MultiSlotBinaryMessage) GetCommunicationStateIsItdma() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CommunicationStateIsItdma
}

// GetCommunicationStateIsItdmaOk returns a tuple with the CommunicationStateIsItdma field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetCommunicationStateIsItdmaOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommunicationStateIsItdma, true
}

// SetCommunicationStateIsItdma sets field value
func (o *MultiSlotBinaryMessage) SetCommunicationStateIsItdma(v bool) {
	o.CommunicationStateIsItdma = v
}

// GetCommunicationState returns the CommunicationState field value
func (o *MultiSlotBinaryMessage) GetCommunicationState() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CommunicationState
}

// GetCommunicationStateOk returns a tuple with the CommunicationState field value
// and a boolean to check if the value has been set.
func (o *MultiSlotBinaryMessage) GetCommunicationStateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommunicationState, true
}

// SetCommunicationState sets field value
func (o *MultiSlotBinaryMessage) SetCommunicationState(v int32) {
	o.CommunicationState = v
}

func (o MultiSlotBinaryMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["MessageID"] = o.MessageID
	}
	if true {
		toSerialize["RepeatIndicator"] = o.RepeatIndicator
	}
	if true {
		toSerialize["UserID"] = o.UserID
	}
	if true {
		toSerialize["Valid"] = o.Valid
	}
	if true {
		toSerialize["DestinationIDValid"] = o.DestinationIDValid
	}
	if true {
		toSerialize["ApplicationIDValid"] = o.ApplicationIDValid
	}
	if true {
		toSerialize["DestinationID"] = o.DestinationID
	}
	if true {
		toSerialize["Spare1"] = o.Spare1
	}
	if true {
		toSerialize["ApplicationID"] = o.ApplicationID
	}
	if true {
		toSerialize["Payload"] = o.Payload
	}
	if true {
		toSerialize["Spare2"] = o.Spare2
	}
	if true {
		toSerialize["CommunicationStateIsItdma"] = o.CommunicationStateIsItdma
	}
	if true {
		toSerialize["CommunicationState"] = o.CommunicationState
	}
	return json.Marshal(toSerialize)
}

type NullableMultiSlotBinaryMessage struct {
	value *MultiSlotBinaryMessage
	isSet bool
}

func (v NullableMultiSlotBinaryMessage) Get() *MultiSlotBinaryMessage {
	return v.value
}

func (v *NullableMultiSlotBinaryMessage) Set(val *MultiSlotBinaryMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSlotBinaryMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSlotBinaryMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSlotBinaryMessage(val *MultiSlotBinaryMessage) *NullableMultiSlotBinaryMessage {
	return &NullableMultiSlotBinaryMessage{value: val, isSet: true}
}

func (v NullableMultiSlotBinaryMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSlotBinaryMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


