/*
Ais-Stream WebsocketObjects

OpenAPI 3.0 definitions for the data models used by aisstream.io.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aisStream

import (
	"encoding/json"
)

// SafetyBroadcastMessage struct for SafetyBroadcastMessage
type SafetyBroadcastMessage struct {
	MessageID int32 `json:"MessageID"`
	RepeatIndicator int32 `json:"RepeatIndicator"`
	UserID int32 `json:"UserID"`
	Valid bool `json:"Valid"`
	Spare int32 `json:"Spare"`
	Text string `json:"Text"`
}

// NewSafetyBroadcastMessage instantiates a new SafetyBroadcastMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSafetyBroadcastMessage(messageID int32, repeatIndicator int32, userID int32, valid bool, spare int32, text string) *SafetyBroadcastMessage {
	this := SafetyBroadcastMessage{}
	this.MessageID = messageID
	this.RepeatIndicator = repeatIndicator
	this.UserID = userID
	this.Valid = valid
	this.Spare = spare
	this.Text = text
	return &this
}

// NewSafetyBroadcastMessageWithDefaults instantiates a new SafetyBroadcastMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSafetyBroadcastMessageWithDefaults() *SafetyBroadcastMessage {
	this := SafetyBroadcastMessage{}
	return &this
}

// GetMessageID returns the MessageID field value
func (o *SafetyBroadcastMessage) GetMessageID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MessageID
}

// GetMessageIDOk returns a tuple with the MessageID field value
// and a boolean to check if the value has been set.
func (o *SafetyBroadcastMessage) GetMessageIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageID, true
}

// SetMessageID sets field value
func (o *SafetyBroadcastMessage) SetMessageID(v int32) {
	o.MessageID = v
}

// GetRepeatIndicator returns the RepeatIndicator field value
func (o *SafetyBroadcastMessage) GetRepeatIndicator() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RepeatIndicator
}

// GetRepeatIndicatorOk returns a tuple with the RepeatIndicator field value
// and a boolean to check if the value has been set.
func (o *SafetyBroadcastMessage) GetRepeatIndicatorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepeatIndicator, true
}

// SetRepeatIndicator sets field value
func (o *SafetyBroadcastMessage) SetRepeatIndicator(v int32) {
	o.RepeatIndicator = v
}

// GetUserID returns the UserID field value
func (o *SafetyBroadcastMessage) GetUserID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value
// and a boolean to check if the value has been set.
func (o *SafetyBroadcastMessage) GetUserIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserID, true
}

// SetUserID sets field value
func (o *SafetyBroadcastMessage) SetUserID(v int32) {
	o.UserID = v
}

// GetValid returns the Valid field value
func (o *SafetyBroadcastMessage) GetValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Valid
}

// GetValidOk returns a tuple with the Valid field value
// and a boolean to check if the value has been set.
func (o *SafetyBroadcastMessage) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Valid, true
}

// SetValid sets field value
func (o *SafetyBroadcastMessage) SetValid(v bool) {
	o.Valid = v
}

// GetSpare returns the Spare field value
func (o *SafetyBroadcastMessage) GetSpare() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Spare
}

// GetSpareOk returns a tuple with the Spare field value
// and a boolean to check if the value has been set.
func (o *SafetyBroadcastMessage) GetSpareOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spare, true
}

// SetSpare sets field value
func (o *SafetyBroadcastMessage) SetSpare(v int32) {
	o.Spare = v
}

// GetText returns the Text field value
func (o *SafetyBroadcastMessage) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *SafetyBroadcastMessage) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *SafetyBroadcastMessage) SetText(v string) {
	o.Text = v
}

func (o SafetyBroadcastMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["MessageID"] = o.MessageID
	}
	if true {
		toSerialize["RepeatIndicator"] = o.RepeatIndicator
	}
	if true {
		toSerialize["UserID"] = o.UserID
	}
	if true {
		toSerialize["Valid"] = o.Valid
	}
	if true {
		toSerialize["Spare"] = o.Spare
	}
	if true {
		toSerialize["Text"] = o.Text
	}
	return json.Marshal(toSerialize)
}

type NullableSafetyBroadcastMessage struct {
	value *SafetyBroadcastMessage
	isSet bool
}

func (v NullableSafetyBroadcastMessage) Get() *SafetyBroadcastMessage {
	return v.value
}

func (v *NullableSafetyBroadcastMessage) Set(val *SafetyBroadcastMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableSafetyBroadcastMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableSafetyBroadcastMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSafetyBroadcastMessage(val *SafetyBroadcastMessage) *NullableSafetyBroadcastMessage {
	return &NullableSafetyBroadcastMessage{value: val, isSet: true}
}

func (v NullableSafetyBroadcastMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSafetyBroadcastMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


